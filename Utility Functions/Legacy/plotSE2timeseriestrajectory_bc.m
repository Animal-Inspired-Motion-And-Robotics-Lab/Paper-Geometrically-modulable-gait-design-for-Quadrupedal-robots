function f = plotSE2timeseriestrajectory_bc(traj, b_est)
%PLOTSE2TIMESERIESTRAJECTORY_BC plot the body and contact trajectories of an SE(2), walking quadrupedal system
%   This function plots the body and contact timeseries/trajectories for a given run of a quadrupedal system-- this trajectory is generated by no-slip
%   approximations.
    gray_col = [77, 77, 77]/255; font_size = 15;                                                    %%%%%%%%%%%% PLOT PARAMETERS (tweak this to get the desired effect)
    % [uS, idx_p] = divvyuptraj(trot.exp.S); % not supported right now
    for idx = 1:3                                                                                   %%%%%%%%%%%% BODY TIME-SERIES
        switch idx
            case 1
                c = '$$x$$'; c_dot = '$$\dot{x}$$'; sty = '-'; pcol = gray_col;  idx_est = idx; idx_org = idx; txtcol = 'k';  % $$x(t)$$
            case 2
                c = '$$y$$'; c_dot = '$$\dot{y}$$'; sty = '-'; pcol = gray_col; idx_est = idx; idx_org = idx; txtcol = 'k';   % $$y(t)$$
            case 3
                c = '$$\theta$$'; c_dot = '$$\dot{\theta}$$'; sty = '-'; pcol = gray_col; idx_est = idx; idx_org = 6; txtcol = 'k';   % $$\theta(t)$$
        end
        sty_est = ':';
        if idx == 1
            f = figure('units','pixels','position',[0 0 1080 1920],'Color','w'); % set the figure size, etc % for big monitor [0 0 1080 1920] % for laptop-screen [0 0 1920 1080]
            % set(gcf,'Visible','on');                                             % pop-out the current figure
            tiledlayout('vertical', 'TileSpacing', 'tight', 'Padding', 'tight');
        end
        ax = nexttile();
        if idx == 1
            plot(traj.exp.t, traj.exp.b{idx_org}, sty, 'LineWidth', 2, 'Color', 'k', 'DisplayName', 'tracked');
            hold on; ax.FontSize = font_size; % grid on;
            plot(traj.exp.t, b_est{idx_est}, sty_est, 'LineWidth', 1.5, 'Color', pcol, 'DisplayName', 'estimated');
            legend('Location', 'best', 'FontSize', font_size);
        else
            plot(traj.exp.t, traj.exp.b{idx_org}, sty, 'LineWidth', 2, 'Color', 'k');
            hold on; ax.FontSize = font_size; % grid on;
            plot(traj.exp.t, b_est{idx_est}, sty_est, 'LineWidth', 1.5, 'Color', pcol);
        end
        xticklabels('');
        ylabel(c, 'Interpreter', 'latex', 'FontSize', font_size);
    
        ax = nexttile();
        plot(traj.exp.t, [diff(traj.exp.b{idx_org})./diff(traj.exp.t) nan], sty, 'LineWidth', 2, 'Color', 'k');
        hold on; ax.FontSize = font_size; % grid on;
        plot(traj.exp.t, [diff(b_est{idx_est})./diff(traj.exp.t) nan], sty_est, 'LineWidth', 1.5, 'Color', pcol);
        xticklabels('');
        ylabel(c_dot, 'Interpreter', 'latex', 'FontSize', font_size, 'Color', txtcol);
    end
    for i = 1:4                                                                                     %%%%%%%%%%%% CONTACT TIME-SERIES
        ax = nexttile();
        plot(traj.exp.t, traj.exp.C_i{i}, '-', 'LineWidth', 2.0, 'Color', 'k');
        ax.FontSize = font_size;
        if i == 1
            hold on; xticklabels('');
        elseif i == 4
            xlabel('$$t$$', 'Interpreter', 'latex', 'FontSize', font_size);
        else
            xticklabels('');
        end
        ylabel(['$$c_' num2str(i) '$$'], 'Interpreter', 'latex', 'FontSize', font_size); yticks([0 1]);
    end
    ax = nexttile();
    plot(traj.exp.b{1}, traj.exp.b{2}, 'k-', 'LineWidth', 2);
    grid on; hold on; axis equal tight; ax.FontSize = font_size;
    plot(b_est{1}, b_est{2}, 'k--', 'LineWidth', 2);
    xlabel('$$x$$', 'Interpreter', 'latex', 'FontSize', font_size); 
    ylabel('$$y$$', 'Interpreter', 'latex', 'FontSize', font_size); 
    % title('SE(2) trajectory', 'Interpreter', 'latex', 'FontSize', 20);
end

